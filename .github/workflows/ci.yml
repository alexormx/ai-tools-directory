name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: ai_tools
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: ai_tools
        ports: ["5432:5432"]
        options: >-
          --health-cmd="pg_isready -U ai_tools" --health-interval=5s --health-timeout=5s --health-retries=5
      redis:
        image: redis:alpine
        ports: ["6379:6379"]
    env:
      DATABASE_URL: postgresql://ai_tools:testpass@localhost:5432/ai_tools
      DJANGO_SECRET_KEY: test-secret
      DJANGO_DEBUG: "0"
      CORS_ALLOWED_ORIGINS: http://localhost:3000
      N8N_WEBHOOK_SECRET: testhook
      CELERY_TASK_ALWAYS_EAGER: "1"
      USE_SQLITE_FOR_TESTS: "0"

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install backend deps
        working-directory: backend
        run: pip install -r requirements.txt
      - name: Run migrations
        working-directory: backend
        run: |
          python manage.py migrate --noinput
      - name: Run tests
        working-directory: backend
        run: pytest -q

  frontend-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      - name: Install deps
        working-directory: frontend
        run: npm install
      - name: Build
        working-directory: frontend
        env:
          NEXT_PUBLIC_API_BASE_URL: http://localhost:8000
        run: npm run build
